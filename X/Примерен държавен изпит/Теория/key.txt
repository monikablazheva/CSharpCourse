Модул 1

1  C
2  D
3  A
4  B
5  C
6  D
7  A
8  B
9  B
10 A
11 D
12 C
13 B
14 A
15 B
16 D
17 A
18 B
19 C
20 A




















Модул 2

1.
nums
 .Where(i => i > 3 && i % 3 == 0)
 .FirstOrDefault()

2. 
int Fibonachi(int n)
{
  if (number <= 2)
      return 1;

  return Fibonachi(n - 2) + Fibonachi(n - 1);
}

3.
public class Student
{
  public string FacultyNumber { get; set; }
  public string FirstName { get; set; }
  public string LastName { get; set; }

  public Student(string FacultyNumber, string FirstName, string LastName)
  {
    this.FacultyNumber = FacultyNumber;
    this.FirstName = FirstName;
    this.LastName = LastName;
  }
}

class Program
{
  static void Main(string[] args)
  {
    Student s = new Student("0126120", "John", "Smith");
  }
}

4.
Масивът е конструкция с фиксирана дължина. List е колекция, която се оразмерява динамично с добавяне на нови елементи.

5.
int[] nums = { 6, 2, 8, 16, 3, 1 };

for (int i = 1; i < nums.Length; i++)
{
  for (int j = 0; j < nums.Length - i; j++)
  {
    if (nums[j] < nums[j + 1])
    {
      int temp = nums[j];
      nums[j] = nums[j + 1];
      nums[j + 1] = temp;
    }
  }
}

for (int i = 0; i < nums.Length; i++)
{
  Console.Write(nums[i] + "\t");
}

6.
public class HomeController : Controller
{
  public IActionResult Index()
  {
    return View();
  }

  [HttpGet]
  public IActionResult Login()
  {
    return View();
  }

  [HttpPost]
  public IActionResult Login(string username, string password)
  {
    return View();
  }
}

7.
public class UsersDb : DbContext
{
  public virtual DbSet<User> Users { get; set; }

  protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
  {
    optionsBuilder.UseSqlServer(@"Data Source=localhost\SQLEXPRESS;Initial Catalog=UsersDb;");
    optionsBuilder.UseLazyLoadingProxies();
  }
}

8.  Когато един action върне RedirectResult, framework-a отговаря на HTTP заявката със Redirect response, който включва в себе си адрес (URL), към който User Agent-a (най-често браузър) да направи нова GET заявка. За разлика от това JsonResult генерирал Json форматиран текстов низ, съдържащ данните от модела, с който е асоцииран. Framework-a връща този Json низ на User Agent-a със стандартен HTTP Response.

9.  Controller routes дефинират начина, по който се интерпретира заявения ресурс в HTTP заявката. Controller routes се дефинират в конфигурацията на Endpoints чрез IApplicationBuilder в Startup метода на приложението. Всеки route съдържа име, шаблон и стойности по подразбиране.

app.UseEndpoints(endpoints =>
{
    endpoints.MapControllerRoute(
    name: "default",
    pattern: "{controlle}/{action}/{id?}",
    defaults: new { controller = "Home", action = "Index"} );
});

или

app.UseEndpoints(endpoints =>
{
    endpoints.MapControllerRoute(
    name: "default",
    pattern: "{controller=Home}/{action=Index}/{id?}");
});

10. 

Ретроспекция на спринт е среща, част от SCRUM процеса за софтуерна разработка.

На нея вземат участие всички scrum екипи, както и заинтересованите страни.
Възоснова поетите ангажименти през изминалия спринт се решава какви ще са ангажиментите през следващия, както и нов Definition of Done (в идеалния случай)

Scrum master-и се събират, за да споделят резултати от изминалия спринт. Срещата има за цел разпознаване на поведение, което може да афектира всички SCRUM отбори и подготовка на адекватна реакция, за да се запази ефективността на отборите

Дискутират се възможности за цялостно подобряване ефиктивността.





















Модул 3

1. В ToDoManagerContext следния ред е изтрит: 

public virtual DbSet<User> Users { get; set; }

2. В Connection String-a на ToDoManagerContext, ключовата дума "Data Source" е променена. Следния ред: 

optionsBuilder.UseSqlServer(@"Data Source=(localdb)\ProjectsV13;Initial Catalog=ToDoManagerDB;");

е променен по следния начин:

optionsBuilder.UseSqlServer(@"Dat Source=(localdb)\ProjectsV13;Initial Catalog=ToDoManagerDB;");

3. В изгледа Views/Project/Index.cshtml атрибута asp-controller има грешка в изписването. Следния ред:

<a asp-action="Create" asp-controller="Project">New</a>

е променен по следния начин:

<a asp-action="Create" asp-controllerr="Project">New</a>

4. В изгледа Views/Project/Index.cshtml при обхождане на елементите Items в модела се пропускат първите 10 елемента от колекцията. Следния ред:

@foreach (var item in Model.Items)

е променен по следния начин:

@foreach (var item in Model.Items.Skip(10))

5. В контролера Project в края на екшъна Create има грешка в изписването на думата "Project". Следния ред:

return RedirectToAction("Index", "Project");
 
е променен по следния начин: 

return RedirectToAction("Index", "Projet");

6. При създаване на нов запис за отчитане на часове (WorkLog запис) стойността по подразбиране за датата в Create изгледа трябва да има стойност по подразбиране днешна дата